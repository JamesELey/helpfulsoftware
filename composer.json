{
    "name": "helpfulsoftware/portfolio",
    "type": "project",
    "description": "Professional portfolio showcasing brand partnerships",
    "keywords": ["laravel", "portfolio", "brands", "investor"],
    "license": "MIT",
    "require": {
        "php": "^8.1",
        "guzzlehttp/guzzle": "^7.2",
        "laravel/framework": "^10.10",
        "laravel/sanctum": "^3.2",
        "laravel/tinker": "^2.8"
    },
    "require-dev": {
        "fakerphp/faker": "^1.9.1",
        "laravel/pint": "^1.0",
        "laravel/sail": "^1.18",
        "mockery/mockery": "^1.4.4",
        "nunomaduro/collision": "^7.0",
        "phpunit/phpunit": "^10.1",
        "spatie/laravel-ignition": "^2.0"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "scripts": {
        "post-autoload-dump": [
            "@deploy:permissions",
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "post-update-cmd": [
            "@deploy:permissions",
            "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi"
        ],
        "deploy": [
            "@deploy:permissions",
            "@deploy:clear",
            "@deploy:migrate",
            "@deploy:seed",
            "@deploy:cache"
        ],
        "deploy:permissions": [
            "@php -r \"if (!is_dir('bootstrap/cache')) mkdir('bootstrap/cache', 0755, true);\"",
            "@php -r \"if (!is_dir('storage/framework/cache')) mkdir('storage/framework/cache', 0755, true);\"",
            "@php -r \"if (!is_dir('storage/framework/sessions')) mkdir('storage/framework/sessions', 0755, true);\"",
            "@php -r \"if (!is_dir('storage/framework/views')) mkdir('storage/framework/views', 0755, true);\"",
            "@php -r \"if (!is_dir('storage/logs')) mkdir('storage/logs', 0755, true);\""
        ],
        "deploy:clear": [
            "@php artisan config:clear",
            "@php artisan cache:clear",
            "@php artisan view:clear",
            "@php artisan route:clear"
        ],
        "deploy:migrate": [
            "@php artisan migrate --force"
        ],
        "deploy:seed": [
            "@php artisan db:seed --class=RealProjectSeeder --force"
        ],
        "deploy:cache": [
            "@php artisan config:cache",
            "@php artisan route:cache",
            "@php artisan view:cache"
        ],
        "deploy:quick": [
            "@deploy:clear",
            "@deploy:migrate",
            "@deploy:seed",
            "@deploy:cache"
        ],
        "deploy:production": [
            "@deploy:permissions",
            "@deploy:clear",
            "@deploy:migrate",
            "@deploy:seed",
            "@deploy:cache"
        ],
        "setup:server": [
            "@php -r \"echo 'üöÄ Setting up HelpfulSoftware Portfolio...' . PHP_EOL;\"",
            "@deploy:permissions",
            "@php artisan config:clear",
            "@php artisan cache:clear",
            "@php artisan view:clear",
            "@php artisan route:clear",
            "@deploy:migrate",
            "@deploy:seed",
            "@deploy:cache",
            "@php -r \"echo PHP_EOL . '‚úÖ Server setup completed!' . PHP_EOL;\""
        ],
        "test:server": [
            "@php -r \"echo 'üß™ Testing server configuration...' . PHP_EOL;\"",
            "@php -r \"echo 'PHP Version: ' . phpversion() . PHP_EOL;\"",
            "@php -r \"echo 'Laravel Version: ';\"",
            "@php artisan --version",
            "@php -r \"echo 'Available routes:' . PHP_EOL;\"",
            "@php artisan route:list"
        ],
        "fix:routes": [
            "@php -r \"echo 'üîß Fixing Laravel routing...' . PHP_EOL;\"",
            "@php artisan config:clear",
            "@php artisan cache:clear",
            "@php artisan view:clear",
            "@php artisan route:clear",
            "@php artisan route:cache",
            "@php -r \"echo '‚úÖ Route fix completed!' . PHP_EOL;\""
        ],
        "diagnose": [
            "@php -r \"echo 'üîç Running server diagnostic...' . PHP_EOL;\"",
            "@php -r \"echo 'Current directory: ' . getcwd() . PHP_EOL;\"",
            "@php -r \"echo 'Laravel files exist: ' . (file_exists('artisan') ? 'Yes' : 'No') . PHP_EOL;\"",
            "@php -r \"echo 'Composer files exist: ' . (file_exists('composer.json') ? 'Yes' : 'No') . PHP_EOL;\"",
            "@php -r \"echo '.env file exists: ' . (file_exists('.env') ? 'Yes' : 'No') . PHP_EOL;\"",
            "@php -r \"echo 'About view exists: ' . (file_exists('resources/views/portfolio/about.blade.php') ? 'Yes' : 'No') . PHP_EOL;\"",
            "@php -r \"echo 'Storage writable: ' . (is_writable('storage') ? 'Yes' : 'No') . PHP_EOL;\"",
            "@php -r \"echo 'Bootstrap cache writable: ' . (is_writable('bootstrap/cache') ? 'Yes' : 'No') . PHP_EOL;\"",
            "@php artisan --version"
        ]
    },
    "extra": {
        "laravel": {
            "dont-discover": []
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "pestphp/pest-plugin": true,
            "php-http/discovery": true
        }
    },
    "minimum-stability": "stable",
    "prefer-stable": true
}
